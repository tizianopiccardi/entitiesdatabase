/* This file was generated by SableCC (http://www.sablecc.org/). */

package entitiesdb.language.node;

import entitiesdb.language.analysis.*;

@SuppressWarnings("nls")
public final class ASinglePattern extends PPattern
{
    private PValuetype _valuetype_;

    public ASinglePattern()
    {
        // Constructor
    }

    public ASinglePattern(
        @SuppressWarnings("hiding") PValuetype _valuetype_)
    {
        // Constructor
        setValuetype(_valuetype_);

    }

    @Override
    public Object clone()
    {
        return new ASinglePattern(
            cloneNode(this._valuetype_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASinglePattern(this);
    }

    public PValuetype getValuetype()
    {
        return this._valuetype_;
    }

    public void setValuetype(PValuetype node)
    {
        if(this._valuetype_ != null)
        {
            this._valuetype_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._valuetype_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._valuetype_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._valuetype_ == child)
        {
            this._valuetype_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._valuetype_ == oldChild)
        {
            setValuetype((PValuetype) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
