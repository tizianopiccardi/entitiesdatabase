/* This file was generated by SableCC (http://www.sablecc.org/). */

package entitiesdb.language.node;

import entitiesdb.language.analysis.*;

@SuppressWarnings("nls")
public final class ADefinitionQuery extends PQuery
{
    private PRequest _request_;
    private TDefined _defined_;
    private PBody _body_;

    public ADefinitionQuery()
    {
        // Constructor
    }

    public ADefinitionQuery(
        @SuppressWarnings("hiding") PRequest _request_,
        @SuppressWarnings("hiding") TDefined _defined_,
        @SuppressWarnings("hiding") PBody _body_)
    {
        // Constructor
        setRequest(_request_);

        setDefined(_defined_);

        setBody(_body_);

    }

    @Override
    public Object clone()
    {
        return new ADefinitionQuery(
            cloneNode(this._request_),
            cloneNode(this._defined_),
            cloneNode(this._body_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADefinitionQuery(this);
    }

    public PRequest getRequest()
    {
        return this._request_;
    }

    public void setRequest(PRequest node)
    {
        if(this._request_ != null)
        {
            this._request_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._request_ = node;
    }

    public TDefined getDefined()
    {
        return this._defined_;
    }

    public void setDefined(TDefined node)
    {
        if(this._defined_ != null)
        {
            this._defined_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._defined_ = node;
    }

    public PBody getBody()
    {
        return this._body_;
    }

    public void setBody(PBody node)
    {
        if(this._body_ != null)
        {
            this._body_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._body_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._request_)
            + toString(this._defined_)
            + toString(this._body_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._request_ == child)
        {
            this._request_ = null;
            return;
        }

        if(this._defined_ == child)
        {
            this._defined_ = null;
            return;
        }

        if(this._body_ == child)
        {
            this._body_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._request_ == oldChild)
        {
            setRequest((PRequest) newChild);
            return;
        }

        if(this._defined_ == oldChild)
        {
            setDefined((TDefined) newChild);
            return;
        }

        if(this._body_ == oldChild)
        {
            setBody((PBody) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
