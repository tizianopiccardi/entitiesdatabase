/* This file was generated by SableCC (http://www.sablecc.org/). */

package entitiesdb.language.analysis;

import java.util.*;
import entitiesdb.language.node.*;

public class ReversedDepthFirstAdapter extends AnalysisAdapter
{
    public void inStart(Start node)
    {
        defaultIn(node);
    }

    public void outStart(Start node)
    {
        defaultOut(node);
    }

    public void defaultIn(@SuppressWarnings("unused") Node node)
    {
        // Do nothing
    }

    public void defaultOut(@SuppressWarnings("unused") Node node)
    {
        // Do nothing
    }

    @Override
    public void caseStart(Start node)
    {
        inStart(node);
        node.getEOF().apply(this);
        node.getPQuery().apply(this);
        outStart(node);
    }

    public void inADefinitionQuery(ADefinitionQuery node)
    {
        defaultIn(node);
    }

    public void outADefinitionQuery(ADefinitionQuery node)
    {
        defaultOut(node);
    }

    @Override
    public void caseADefinitionQuery(ADefinitionQuery node)
    {
        inADefinitionQuery(node);
        if(node.getBody() != null)
        {
            node.getBody().apply(this);
        }
        if(node.getDefined() != null)
        {
            node.getDefined().apply(this);
        }
        if(node.getRequest() != null)
        {
            node.getRequest().apply(this);
        }
        outADefinitionQuery(node);
    }

    public void inARequest(ARequest node)
    {
        defaultIn(node);
    }

    public void outARequest(ARequest node)
    {
        defaultOut(node);
    }

    @Override
    public void caseARequest(ARequest node)
    {
        inARequest(node);
        if(node.getRbracket() != null)
        {
            node.getRbracket().apply(this);
        }
        if(node.getAttriblist() != null)
        {
            node.getAttriblist().apply(this);
        }
        if(node.getLbracket() != null)
        {
            node.getLbracket().apply(this);
        }
        if(node.getIdentifier() != null)
        {
            node.getIdentifier().apply(this);
        }
        outARequest(node);
    }

    public void inAEmptyAttriblist(AEmptyAttriblist node)
    {
        defaultIn(node);
    }

    public void outAEmptyAttriblist(AEmptyAttriblist node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAEmptyAttriblist(AEmptyAttriblist node)
    {
        inAEmptyAttriblist(node);
        outAEmptyAttriblist(node);
    }

    public void inAEmptyBody(AEmptyBody node)
    {
        defaultIn(node);
    }

    public void outAEmptyBody(AEmptyBody node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAEmptyBody(AEmptyBody node)
    {
        inAEmptyBody(node);
        outAEmptyBody(node);
    }
}
