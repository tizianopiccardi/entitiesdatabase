/* This file was generated by SableCC (http://www.sablecc.org/). */

package entitiesdb.language.node;

import entitiesdb.language.analysis.*;

@SuppressWarnings("nls")
public final class AListAttributes extends PAttributes
{
    private TIdentifier _identifier_;
    private TColon _colon_;
    private PValuetype _valuetype_;
    private TComa _coma_;
    private PAttributes _attributes_;

    public AListAttributes()
    {
        // Constructor
    }

    public AListAttributes(
        @SuppressWarnings("hiding") TIdentifier _identifier_,
        @SuppressWarnings("hiding") TColon _colon_,
        @SuppressWarnings("hiding") PValuetype _valuetype_,
        @SuppressWarnings("hiding") TComa _coma_,
        @SuppressWarnings("hiding") PAttributes _attributes_)
    {
        // Constructor
        setIdentifier(_identifier_);

        setColon(_colon_);

        setValuetype(_valuetype_);

        setComa(_coma_);

        setAttributes(_attributes_);

    }

    @Override
    public Object clone()
    {
        return new AListAttributes(
            cloneNode(this._identifier_),
            cloneNode(this._colon_),
            cloneNode(this._valuetype_),
            cloneNode(this._coma_),
            cloneNode(this._attributes_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAListAttributes(this);
    }

    public TIdentifier getIdentifier()
    {
        return this._identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(this._identifier_ != null)
        {
            this._identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identifier_ = node;
    }

    public TColon getColon()
    {
        return this._colon_;
    }

    public void setColon(TColon node)
    {
        if(this._colon_ != null)
        {
            this._colon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colon_ = node;
    }

    public PValuetype getValuetype()
    {
        return this._valuetype_;
    }

    public void setValuetype(PValuetype node)
    {
        if(this._valuetype_ != null)
        {
            this._valuetype_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._valuetype_ = node;
    }

    public TComa getComa()
    {
        return this._coma_;
    }

    public void setComa(TComa node)
    {
        if(this._coma_ != null)
        {
            this._coma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._coma_ = node;
    }

    public PAttributes getAttributes()
    {
        return this._attributes_;
    }

    public void setAttributes(PAttributes node)
    {
        if(this._attributes_ != null)
        {
            this._attributes_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._attributes_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._identifier_)
            + toString(this._colon_)
            + toString(this._valuetype_)
            + toString(this._coma_)
            + toString(this._attributes_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._identifier_ == child)
        {
            this._identifier_ = null;
            return;
        }

        if(this._colon_ == child)
        {
            this._colon_ = null;
            return;
        }

        if(this._valuetype_ == child)
        {
            this._valuetype_ = null;
            return;
        }

        if(this._coma_ == child)
        {
            this._coma_ = null;
            return;
        }

        if(this._attributes_ == child)
        {
            this._attributes_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

        if(this._colon_ == oldChild)
        {
            setColon((TColon) newChild);
            return;
        }

        if(this._valuetype_ == oldChild)
        {
            setValuetype((PValuetype) newChild);
            return;
        }

        if(this._coma_ == oldChild)
        {
            setComa((TComa) newChild);
            return;
        }

        if(this._attributes_ == oldChild)
        {
            setAttributes((PAttributes) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
