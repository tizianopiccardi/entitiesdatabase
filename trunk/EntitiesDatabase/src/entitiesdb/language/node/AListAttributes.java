/* This file was generated by SableCC (http://www.sablecc.org/). */

package entitiesdb.language.node;

import entitiesdb.language.analysis.*;

@SuppressWarnings("nls")
public final class AListAttributes extends PAttributes
{
    private PAttributes _list_;
    private TComa _coma_;
    private PAttribute _attribute_;

    public AListAttributes()
    {
        // Constructor
    }

    public AListAttributes(
        @SuppressWarnings("hiding") PAttributes _list_,
        @SuppressWarnings("hiding") TComa _coma_,
        @SuppressWarnings("hiding") PAttribute _attribute_)
    {
        // Constructor
        setList(_list_);

        setComa(_coma_);

        setAttribute(_attribute_);

    }

    @Override
    public Object clone()
    {
        return new AListAttributes(
            cloneNode(this._list_),
            cloneNode(this._coma_),
            cloneNode(this._attribute_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAListAttributes(this);
    }

    public PAttributes getList()
    {
        return this._list_;
    }

    public void setList(PAttributes node)
    {
        if(this._list_ != null)
        {
            this._list_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._list_ = node;
    }

    public TComa getComa()
    {
        return this._coma_;
    }

    public void setComa(TComa node)
    {
        if(this._coma_ != null)
        {
            this._coma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._coma_ = node;
    }

    public PAttribute getAttribute()
    {
        return this._attribute_;
    }

    public void setAttribute(PAttribute node)
    {
        if(this._attribute_ != null)
        {
            this._attribute_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._attribute_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._list_)
            + toString(this._coma_)
            + toString(this._attribute_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._list_ == child)
        {
            this._list_ = null;
            return;
        }

        if(this._coma_ == child)
        {
            this._coma_ = null;
            return;
        }

        if(this._attribute_ == child)
        {
            this._attribute_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._list_ == oldChild)
        {
            setList((PAttributes) newChild);
            return;
        }

        if(this._coma_ == oldChild)
        {
            setComa((TComa) newChild);
            return;
        }

        if(this._attribute_ == oldChild)
        {
            setAttribute((PAttribute) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
